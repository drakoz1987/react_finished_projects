{"version":3,"sources":["components/Editor/index.js","components/Preview/index.js","components/App/index.js","index.js"],"names":["Editor","props","react_default","a","createElement","className","id","value","markdown","onChange","captureMarkdown","Preview","dangerouslySetInnerHTML","__html","renderedHtml","initialText","md","require","breaks","App","state","render","grabMarkdown","e","_this","setState","target","renderMarkdown","text","result","components_Editor","this","clearText","components_Preview","React","Component","whereToRender","document","getElementById","ReactDOM","components_App"],"mappings":"iNAeeA,EAbA,SAAAC,GACd,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,sBACAH,EAAAC,EAAAC,cAAA,YACCE,GAAG,SACHD,UAAU,SACVE,MAAON,EAAMO,SACbC,SAAUR,EAAMS,oBCGLC,EAXC,SAAAV,GACf,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,OACCE,GAAG,UACHD,UAAU,UACVO,wBAAyB,CAAEC,OAAQZ,EAAMa,kBCJzCC,EAAW,i3BAyCXC,EAAKC,EAAQ,GAARA,CAAuB,CAC/BC,QAAQ,IAgCMC,6MA7BdC,MAAQ,CACPZ,SAAUO,EACVD,aAAcE,EAAGK,OAAON,MAGzBO,aAAe,SAAAC,GACdC,EAAKC,SACJ,CAAEjB,SAAUe,EAAEG,OAAOnB,OACrBiB,EAAKG,eAAeJ,EAAEG,OAAOnB,WAG/BoB,eAAiB,SAAAC,GAChB,IAAIC,EAASb,EAAGK,OAAOO,GACvBJ,EAAKC,SAAS,CAAEX,aAAce,6EAI9B,OACC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC0B,EAAD,CACCtB,SAAUuB,KAAKX,MAAMZ,SACrBE,gBAAiBqB,KAAKT,aACtBU,UAAWD,KAAKC,YAEjB9B,EAAAC,EAAAC,cAAC6B,EAAD,CAASnB,aAAciB,KAAKX,MAAMN,uBAzBpBoB,IAAMC,WC3ClBC,EAAgBC,SAASC,eAAe,QAE9CC,IAASlB,OAAOnB,EAAAC,EAAAC,cAACoC,EAAD,MAASJ","file":"static/js/main.5065c2b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Editor = props => {\r\n\treturn (\r\n\t\t<div className=\"Editor-Container\">\r\n\t\t\t<h2 className=\"editor-title\">MarkDown Previewer</h2>\r\n\t\t\t<textarea\r\n\t\t\t\tid=\"editor\"\r\n\t\t\t\tclassName=\"Editor\"\r\n\t\t\t\tvalue={props.markdown}\r\n\t\t\t\tonChange={props.captureMarkdown}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Editor;\r\n","import React from \"react\";\r\n\r\nconst Preview = props => {\r\n\treturn (\r\n\t\t<div className=\"Preview-Container\">\r\n\t\t\t<div\r\n\t\t\t\tid=\"preview\"\r\n\t\t\t\tclassName=\"Preview\"\r\n\t\t\t\tdangerouslySetInnerHTML={{ __html: props.renderedHtml }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Preview;\r\n","import React from \"react\";\r\nimport Editor from \"../Editor\";\r\nimport Preview from \"../Preview\";\r\n\r\nlet initialText = `\r\n# Hi!\r\n\r\n## Welcome to my React previewer\r\n\t\t\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\t\t\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\t\t\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n\treturn multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\t\t\r\nYou can also make text **bold**\r\nOr _italic_.\r\nOr **_both!_**\r\nAnd  ~~cross stuff out~~ if you want to.\r\n\t\t\r\nThere's also [links](https://codepen.io/bmansk14/), and\r\n> Block Quotes\r\n\t\t\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n\t - With different indentation levels.\r\n\t\t- That look like this.\r\n\t\t\r\n\t\t\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\t\t\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n\t\t\r\n`;\r\n\r\nvar md = require(\"markdown-it\")({\r\n\tbreaks: true\r\n});\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tmarkdown: initialText,\r\n\t\trenderedHtml: md.render(initialText)\r\n\t};\r\n\r\n\tgrabMarkdown = e => {\r\n\t\tthis.setState(\r\n\t\t\t{ markdown: e.target.value },\r\n\t\t\tthis.renderMarkdown(e.target.value)\r\n\t\t);\r\n\t};\r\n\trenderMarkdown = text => {\r\n\t\tlet result = md.render(text);\r\n\t\tthis.setState({ renderedHtml: result });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Editor\r\n\t\t\t\t\tmarkdown={this.state.markdown}\r\n\t\t\t\t\tcaptureMarkdown={this.grabMarkdown}\r\n\t\t\t\t\tclearText={this.clearText}\r\n\t\t\t\t/>\r\n\t\t\t\t<Preview renderedHtml={this.state.renderedHtml} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst whereToRender = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, whereToRender);\r\n"],"sourceRoot":""}